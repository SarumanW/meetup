#User DAO
user.findByLogin=SELECT USER_ID, login, password, name, surname, email, timezone, image_filepath, bday, phone \
  FROM UUSER WHERE LOGIN = ?
user.findById=SELECT USER_ID, login, password, name, surname, email, timezone, image_filepath, bday, phone \
  FROM UUSER WHERE USER_ID = ?
user.findByEmail=SELECT USER_ID, login, password, name, surname, email, timezone, image_filepath, bday, phone \
  FROM UUSER WHERE EMAIL = ?
user.findByParams=SELECT USER_ID, login, password, name, surname, email, timezone, image_filepath, bday, phone \
FROM UUSER WHERE UPPER(login) LIKE UPPER(?) AND UPPER(name) LIKE UPPER(?) AND UPPER(surname) LIKE UPPER(?) AND ROWNUM <= ?
user.update=UPDATE UUSER SET LOGIN = ?, PASSWORD = ?, NAME = ?, SURNAME = ?, EMAIL = ?, \
  TIMEZONE = ?, IMAGE_FILEPATH = ?, BDAY = ?, PHONE = ? WHERE USER_ID = ?
user.updatePassword=UPDATE UUSER SET PASSWORD = ? WHERE USER_ID = ?
user.delete=DELETE FROM UUSER WHERE USER_ID = ?
user.getFriendsIds=SELECT SENDER_ID, RECEIVER_ID \
FROM FRIEND WHERE IS_CONFIRMED=1 and (SENDER_ID=? or RECEIVER_ID=?)
user.getUnconfirmedIds=SELECT SENDER_ID \
FROM FRIEND WHERE RECEIVER_ID=? and IS_CONFIRMED=0
user.confirmFriend=UPDATE FRIEND SET IS_CONFIRMED=1 \
where SENDER_ID=? AND RECEIVER_ID=?
user.deleteFriend=DELETE FROM FRIEND \
WHERE ((SENDER_ID=? and RECEIVER_ID=?) OR (SENDER_ID=? and RECEIVER_ID=?))
user.limitSearchConst=10

#Folder DAO
folder.getUserFolders=SELECT FOLDER_ID, NAME, USER_ID \
  FROM FOLDER \
  WHERE USER_ID = ?
folder.getById=SELECT FOLDER_ID, NAME, USER_ID \
  FROM FOLDER \
  WHERE FOLDER_ID = ? AND USER_ID = ?
folder.getByName=SELECT FOLDER_ID, NAME, USER_ID \
  FROM FOLDER \
  WHERE NAME = ?
folder.update=UPDATE FOLDER \
  SET NAME = ? \
  WHERE FOLDER_ID = ?
folder.delete=DELETE FROM FOLDER \
  WHERE FOLDER_ID = ?

#Event DAO
event.findById=SELECT EVENT_ID , NAME, EVENT_DATE, DESCRIPTION, E.PERIODICITY_ID PERIODICITY_ID, P.PERIODICITY_NAME PERIODICITY_NAME, PLACE,\
  E.EVENT_TYPE_ID EVENT_TYPE_ID, TYPE, IS_DRAFT, FOLDER_ID, IMAGE_FILEPATH \
  FROM EVENT E \
  INNER JOIN PERIODICITY P ON E.PERIODICITY_ID = P.PERIODICITY_ID \
  INNER JOIN EVENT_TYPE ET ON E.EVENT_TYPE_ID = ET.EVENT_TYPE_ID \
  WHERE EVENT_ID = ?
event.update=UPDATE EVENT \
  SET NAME = ?, EVENT_DATE = TO_TIMESTAMP( ?, 'YYYY-MM-DD HH24:MI:SS.FF'), DESCRIPTION = ?, \
  PERIODICITY_ID = ?, PLACE = ?, EVENT_TYPE_ID = ?, IS_DRAFT = ?, FOLDER_ID = ?, IMAGE_FILEPATH = ? \
  WHERE EVENT_ID = ?
event.delete=DELETE FROM EVENT \
  WHERE EVENT_ID = ?
event.findByFolderId=SELECT EVENT_ID , NAME, EVENT_DATE, DESCRIPTION, E.PERIODICITY_ID PERIODICITY_ID, P.PERIODICITY_NAME PERIODICITY_NAME, PLACE,\
  E.EVENT_TYPE_ID EVENT_TYPE_ID, TYPE, IS_DRAFT, FOLDER_ID, IMAGE_FILEPATH \
  FROM EVENT E \
  INNER JOIN PERIODICITY P ON E.PERIODICITY_ID = P.PERIODICITY_ID \
  INNER JOIN EVENT_TYPE ET ON E.EVENT_TYPE_ID = ET.EVENT_TYPE_ID \
  WHERE FOLDER_ID = ?
event.getParticipants=SELECT us.user_id user_id,login, password, us.name name, surname, email, timezone, image_filepath, bday, phone \
  FROM uuser us \
  INNER JOIN user_event ue ON us.user_id = ue.user_id \
  INNER JOIN rrole r ON ue.role_id = r.role_id \
  WHERE ue.event_id = ? AND r.name = 'PARTICIPANT'

#Role DAO
role.getRole=SELECT r.name name \
  FROM user_event ue \
  INNER JOIN rrole r ON ue.role_id = r.role_id \
  WHERE ue.user_id = ? AND ue.event_id = ?